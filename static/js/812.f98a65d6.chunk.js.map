{"version":3,"file":"static/js/812.f98a65d6.chunk.js","mappings":"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","sources":["components/MoviesList/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/AdditionalInformation/AdditionalInformation.module.css?7df3","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailsPage.jsx","pages/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage.module.css?6c65","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage.module.css?f2bc"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ title, id }) {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, _setSearchParams] = useSearchParams();\n\n  return (\n    <li>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{\n          location: useLocation().pathname,\n          search: searchParams.get('query'),\n        }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import MovieListItem from './MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MovieListItem key={id} title={title} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    api.getTrendingMovies().then(data => {\n      data.results.map(({ id, title }) =>\n        setMovies(m => [...m, { id, title }])\n      );\n    });\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AdditionalInformation_list__+nXYI\"};","import { useParams, Link, Outlet } from 'react-router-dom';\nimport s from './AdditionalInformation.module.css';\n\nexport default function AdditionalInformation() {\n  const { movieId } = useParams();\n  const NAVIGATION = ['Cast', 'Reviews'];\n\n  return (\n    <>\n      <ul className={s.list}>\n        {NAVIGATION.map((page, index) => {\n          return (\n            <li key={index}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\n              >\n                {page}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import { useState, useRef } from 'react';\nimport api from 'services/api';\nimport AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport s from './MovieDetailsPage.module.css';\nimport { useEffect } from 'react';\n\nexport const MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  const locationRef = useRef(useLocation().state);\n\n  useEffect(() => {\n    try {\n      const response = api.fetchMoviesWithId(movieId);\n      response.then(data => {\n        const {\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        } = data.data;\n        setMovieDetails({\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        });\n      });\n    } catch (error) {}\n  }, [movieId]);\n\n  if (movieDetails) {\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      movieDetails;\n\n    return (\n      <>\n        {locationRef.current && (\n          <Link\n            className={s.link}\n            to={locationRef.current.location}\n            state={locationRef.current.search}\n          >\n            &#8592; Go back\n          </Link>\n        )}\n        <div className={s.info}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            className={s.img}\n            alt={title}\n          />\n          <div className={s.text}>\n            <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n            <p>{`User score: ${vote_average * 10}%`}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => `${name} `)}</p>\n          </div>\n        </div>\n        <p>Additional information</p>\n        <AdditionalInformation />\n      </>\n    );\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\nimport s from './MoviesPage.module.css';\n\nexport const MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = useLocation().state || searchParams.get('query');\n\n  useEffect(() => {\n    search && searchParams.set('query', search);\n    search && onClickSearch(search);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setMoviesSearch([]);\n  }, [search]);\n\n  function onClickSearch(query) {\n    if (query) {\n      setSearchParams(`query=${query}`);\n      setMoviesSearch([]);\n      try {\n        const response = api.fetchMoviesWithQuery(query);\n        response.then(data => {\n          data.data.results.map(({ id, title }) =>\n            setMoviesSearch(m => [...m, { id, title }])\n          );\n        });\n      } catch (error) {}\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query} />\n        <button onClick={() => onClickSearch(query)}>Search</button>\n      </form>\n      {moviesSearch.length !== 0 && <MoviesList movies={moviesSearch} />}\n    </main>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__k0vIs\",\"img\":\"MovieDetailsPage_img__KBqKH\",\"info\":\"MovieDetailsPage_info__MP-24\",\"text\":\"MovieDetailsPage_text__wjX-+\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__vECho\"};"],"names":["MovieListItem","title","id","useSearchParams","searchParams","to","state","location","useLocation","pathname","search","get","MoviesList","movies","map","HomePage","useState","setMovies","useEffect","api","then","data","results","m","length","AdditionalInformation","movieId","useParams","className","s","page","index","toLowerCase","MovieDetailsPage","movieDetails","setMovieDetails","locationRef","useRef","overview","poster_path","vote_average","genres","release_date","error","current","src","alt","slice","name","MoviesPage","query","setQuery","moviesSearch","setMoviesSearch","setSearchParams","onClickSearch","set","onSubmit","e","preventDefault","onChange","target","value","onClick"],"sourceRoot":""}